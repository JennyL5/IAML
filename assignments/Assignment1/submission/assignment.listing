    Enter your code for part 2 here.
    from sklearn.preprocessing import Normalizer, StandardScaler
    #remove useless features
    feature_names = auto_numeric.columns[1:16].values
    X_tr= auto_numeric[feature_names]
    # preprocessing using normalize data
    normalizer = Normalizer()
    X_tr  = normalizer.fit_transform(X_tr)
    # preprocessing using normalize data
    standardiser = StandardScaler()
    X_tr  = standardiser.fit_transform(X_tr)
    y_tr = auto_numeric1['price']
    lr = LinearRegression(fit_intercept=True, normalize=True, copy_X=True, n_jobs=1)
    pred_cv = cross_val_predict(lr, X_tr, y_tr, cv=kf)
    r2 = r2_score(price, pred_cv)
    rmse = np.sqrt(mean_squared_error(price, pred_cv))
    print('R^2: {}'.format(r2))
    print('RMSE: {}'.format(rmse))
